@model GMUAdmissionProject.DAL.Applicant

@{
    ViewBag.Title = "Edit";

    List<SelectListItem> items = new List<SelectListItem>();

    items.Add(new SelectListItem { Text = "New", Value = "New", Selected = true });

    items.Add(new SelectListItem { Text = "Approve", Value = "Approve" });

    items.Add(new SelectListItem { Text = "Reject", Value = "Reject" });

    items.Add(new SelectListItem { Text = "Wait List", Value = "Wait List" });

    ViewBag.admDecision = items;


    List <SelectListItem> majors = new List<SelectListItem>();

    majors.Add(new SelectListItem { Text = "Accounting", Value = "Accounting", Selected = true });

    majors.Add(new SelectListItem { Text = "Biology", Value = "Biology" });

    majors.Add(new SelectListItem { Text = "Computer Science", Value = "Computer Science" });

    majors.Add(new SelectListItem { Text = "English", Value = "English" });

    ViewBag.majorList = majors;

    List<SelectListItem> dateEnroll = new List<SelectListItem>();

    dateEnroll.Add(new SelectListItem { Text = "Fall", Value = "Fall", Selected = true });

    dateEnroll.Add(new SelectListItem { Text = "Spring", Value = "Spring" });

    ViewBag.enrollDateList = dateEnroll;

    List<SelectListItem> enrollYear = new List<SelectListItem>();

    enrollYear.Add(new SelectListItem { Text = "2017", Value = "2017", Selected = true });

    enrollYear.Add(new SelectListItem { Text = "2018", Value = "2018" });

    enrollYear.Add(new SelectListItem { Text = "2019", Value = "2019" });

    enrollYear.Add(new SelectListItem { Text = "2020", Value = "2020" });

    ViewBag.listEnrollYear = enrollYear;

}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Applicant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("DOB", "", new { @class = "date-picker", Value = Model.DOB })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-group">
                    <div class="radio-inline">
                        @Html.RadioButton("gender", "Male", true, new { id = "IsMale" }) Male
                    </div>
                    <div class="radio-inline">
                        @Html.RadioButton("gender", "Female", new { id = "IsFemale" }) Female
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HSName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HSName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HSName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HSCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HSCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HSCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GradDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("GradDate", "", new { @class = "date-picker", Value = Model.GradDate })
                @Html.ValidationMessageFor(model => model.GradDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GPA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GPA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GPA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MthScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MthScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MthScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VerbScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VerbScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VerbScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AreaOfInterest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(a => a.AreaOfInterest, new SelectList(ViewBag.majorList, "Value", "Text", Model.AreaOfInterest))
                @Html.ValidationMessageFor(model => model.AreaOfInterest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StuType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-group">
                    <div class="radio-inline">
                        @Html.RadioButton("stuType", "Full time", true, new { id = "IsFuTime" }) Full time
                    </div>
                    <div class="radio-inline">
                        @Html.RadioButton("stuType", "Part time", new { id = "IsPaTime" }) Part time
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.StuType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnrollDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(e => e.EnrollDate, new SelectList(ViewBag.enrollDateList, "Value", "Text", Model.EnrollDate))
                @Html.ValidationMessageFor(model => model.EnrollDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnrollYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(e => e.EnrollYear, new SelectList(ViewBag.listEnrollYear, "Value", "Text", Model.EnrollYear))
                @Html.ValidationMessageFor(model => model.EnrollYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("SubDate", "", new { @class = "date-picker", Value = Model.SubDate })
                @Html.ValidationMessageFor(model => model.SubDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdDecision, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(a => a.AdDecision, new SelectList(ViewBag.admDecision, "Value", "Text", Model.AdDecision))

                @Html.ValidationMessageFor(model => model.AdDecision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
